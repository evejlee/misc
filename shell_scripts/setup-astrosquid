#!/bin/bash
#
# usage: setup-astro [options] start|stop|restart
#
# start: Set up the connection.  If the connection exists the request is 
#        ignored.
# stop:  Disconnect. If the connection does not exist the request is ignored.
# restart: run "stop" then "start".
#
# by default the caller's username is used for connection.  To over-ride
# this use the -u option
#   setup-astro -u username start

#gateway=rftpexp
gateway=rftpexp02
domain=rhic.bnl.gov
fullhost=$gateway.$domain

rsshgateway=rssh
rsshfullhost=$rsshgateway.$domain

un=$(uname)
ip=""
iscorus="no"


#ip=$(ifconfig | grep "inet " | grep -v "inet addr:127" | awk '{print $2}' | cut -d ":" -f 2)
ip=$(ip addr | grep 'inet ' | grep -v 'inet 127' | awk '{print $2}' | cut -d '/' -f 1)

check=$(echo $ip | grep 130\.199\.15)
if [ "$check" == "$ip" ]; then
    iscorus="yes"
fi

alltunnels="no"
if [[ "$iscorus" == "yes" ]]; then
    alltunnels="yes"
fi
alltunnels="yes"

function usage
{
    echo "
usage: 
    setup-astro [options] start|stop|restart

    By default, the caller's username is used for logging into the remote host.
    send -u <username> to use an alternative username
"
}
function connect
{
	check=$(ps auxww | grep ".*ssh.*-N.*$gateway.*" | grep -v grep)
	if [ "$check" == "" ]; then
		echo "Connecting to $gateway"
		ssh -f -N "${username}@$fullhost"
		ssh -f -N "${username}@$rsshfullhost"
	fi

    if [[ "$alltunnels" == "yes" ]]; then
		echo "Setting up all tunnels"
        #ssh -f -N -p 22 -c 3des "${username}@${fullhost}" \
        #        -L 3128:rlnx00.rhic.bnl.gov:3127 -
        ssh -f -N -p 22 -c 3des "${username}@${fullhost}" \
                -L 3128:130.199.23.54:3128 \
				-L 1631/cups.phy.bnl.gov/631
        

        ssh -f -N -p 22 -c 3des "${username}@${rsshfullhost}" \
				-L 3129/192.168.1.130/3129
        setproxy
	fi
}

function disconnect
{
    for gtwy in rssh rftpexp; do
        check=$(ps auxww | grep ".*ssh.*-N.*$gtwy.*" | grep -v grep)
        while [[ $check != "" ]]; do
            #if [ "$check" != "" ]; then
            id=$(echo $check | awk '{print $2}')
            echo "disconnecting from $gtwy (jobid $id)"
            kill $id
            check=$(ps auxww | grep ".*ssh.*-N.*$gtwy.*" | grep -v grep)
        done
    done
}

username=$(whoami)
while getopts "u:" Option
  do
  case $Option in
      u) username=$OPTARG ;;
      [?]) usage
           exit 45 ;;  
  esac
done
shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
    usage
	exit 45
fi

action=$1

if [ "$action" == "start" ]; then
	connect
elif [ "$action" == "stop" ]; then
	disconnect
elif [ "$action" == "restart" ]; then
	disconnect
	connect
else
	echo "Unrecognized action: $action"
	exit 45
fi


