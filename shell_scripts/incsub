#!/bin/bash

function usage {
    echo "
    usage: incsub [-h -q queue -n maxjobs] file_list

        -n to specify the max number of allowed jobs in any queue. 
              default is 50.
        -q Send the job to the specified queue and only monitor jobs in that 
           queue.  The -n parameter will then refer to jobs in this queue only.
        
        -h for this help message

    Incrementally submit pbs jobs from the input file list, maintaining at most
    the specified number of jobs in the queues.  Will wait 30 seconds between
    job checks

    If {filename}.log exists, the job will not be submitted.  Remove .log files
    to get jobs to run.
"
}

function count_jobs {
    name=$1
    queue=$2

    # since we don't want the header, we demand the user field
    # equals the user instead of using -u to the qstat
    awk_name="{if (\$3 == \"$name\") print \$0}"
    if [[ "$queue" == "any" ]]; then
        njob=$(qstat | awk "$awk_name" | wc -l)
    else
        awk_queue="{if (\$6 == \"$queue\") print \$0}"
        njob=$(qstat | awk "$awk_queue" | awk "$awk_name" | wc -l)
    fi
    echo "$njob"
}

name=`whoami`

# number of jobs running at once
queue="any"
maxjobs=50
while getopts "hn:q:" Option; do
    case $Option in
        n) maxjobs=$OPTARG ;;
        q) queue=$OPTARG ;;
        h) usage
           exit 45 ;;
        [?]) usage
             exit 45 ;;
    esac
done
shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
    usage
    exit 45
fi

if [[ "$queue" != "any" ]]; then
    echo "queue:                    $queue"
fi
echo "submitting jobs for user: $name"
echo "number in list: $#"
echo "will limit to maxjobs:    $maxjobs"

for file; do
    logf="$file.log"
    if [ ! -e "$logf" ]; then

        njob=$(count_jobs $name $queue)
        while [[ "$njob" -ge "$maxjobs" ]]; do
            sleep 30
            njob=$(count_jobs $name $queue)
        done

        dt=`date +"%T"`
        if [[ "$queue" == "any" ]]; then
            echo -n "Found $njob jobs, submitting $file ($dt) "
            qsub $file
        else
            echo -n "Found $njob jobs, submitting $file to queue $queue ($dt) "
            qsub -q $queue $file
        fi

    fi
done
