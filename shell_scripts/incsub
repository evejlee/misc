#!/bin/bash

function usage {
    echo "
    usage: incsub [-h -n maxjobs] file_list

        -n to specify the max number of allowed jobs in any queue. 
              default is 50.
        -p time between polls of wq status when we are at max allowed
           jobs, default 30
        -s time to sleep between individual submissions when trying to
           catch up to the max number of jobs, default 0.25 second
        -f force starting of all jobs, even if a log file is present.
        -h for this help message

    Incrementally submit wq jobs from the input file list, maintaining at most
    the specified number of jobs in the queues.  Jobs are submitted using
    nohup.  Wait 30 seconds between job checks

    If filename.wqlog exists or filename with the extension removed and replaced
    by .out exists, the job will not be submitted.  Over-ride this with the -f
    switch.
"
}

function count_jobs {
    name=$1

    awk_name="{if (\$2 == \"$name\") print \$0}"
    njob=$(wq ls | awk "$awk_name" | wc -l)
    if [[ $? != 0 ]]; then
        echo "Error found calling wq: $?"
        exit 1
    fi
    echo "$njob"
}

name=`whoami`

# number of jobs running at once
maxjobs=50
sleep_time=0.25
poll_time=30
force="N"
while getopts "hfn:s:p:d:" Option; do
    case $Option in
        f) force="Y" ;;
        n) maxjobs=$OPTARG ;;
        s) sleep_time=$OPTARG ;;
        p) poll_time=$OPTARG ;;
        h) usage
           exit 45 ;;
        [?]) usage
             exit 45 ;;
    esac
done
shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
    usage
    exit 45
fi

nfiles=$#
echo "submitting jobs for user: $name"
echo "number in list: $nfiles"
echo "will limit to maxjobs:    $maxjobs"

i=1

diffjobs=0
for file; do
    perc=$(echo "scale=0; 100*$i/$nfiles" | bc)

    logf="${file}.wqlog"

    if [[ ! -e $logf || $force == "Y" ]]; then

        if [[ $diffjobs -le 0 ]]; then
            njob=$(count_jobs $name $queue)
            ((diffjobs = maxjobs - njob))
            while [[ $diffjobs -le 0 ]]; do
                sleep $poll_time
                njob=$(count_jobs $name $queue)
                ((diffjobs = maxjobs - njob))
            done
            echo "Found $njob jobs  diffjobs: $diffjobs"
        fi

        dt=`date +"%T"`
        echo "    submitting $file $dt $i/$nfiles (${perc}%)"
        #echo -n "$i/$nfiles $dt (${perc}%)  "
        nohup wq sub "$file" &> "$logf" &
        #wq sub -b "$file"
        # this is to force an appropriate pause when things are slow

        if [[ $? != 0 ]]; then
            echo "Error submitting job through wq: $?"
            exit 1
        fi
        wq &> /dev/null

        ((diffjobs -= 1))
        sleep $sleep_time

    fi
    let "i += 1"
done
